import subprocess
import sys
import os
import shutil

# ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á
required_packages = {
    "pyautogui": "pyautogui",
    "openpyxl": "openpyxl",
    "PIL": "Pillow",
    "pytesseract": "pytesseract",
    "pandas": "pandas",
    "joblib": "joblib",
    "pdfplumber": "pdfplumber",
    "scikit-learn": "scikit-learn",
    "pynput": "pynput"
}

def check_python_versions():
    print("\nüîé ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Python ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á...")
    found = {}
    candidates = ["python", "python3", "py", "python3.11", "python3.12", "python3.13"]
    for cmd in candidates:
        path = shutil.which(cmd)
        if path and path not in found:
            try:
                version = subprocess.check_output([cmd, "--version"], stderr=subprocess.STDOUT).decode().strip()
                found[path] = version
            except: pass

    possible_dirs = [
        r"C:\Python38", r"C:\Python39", r"C:\Python310", r"C:\Python311", r"C:\Python312", r"C:\Python313",
        os.path.expanduser(r"~\AppData\Local\Programs\Python\Python311"),
        os.path.expanduser(r"~\AppData\Local\Programs\Python\Python312"),
        os.path.expanduser(r"~\AppData\Local\Programs\Python\Python313"),
    ]

    for d in possible_dirs:
        exe = os.path.join(d, "python.exe")
        if os.path.exists(exe) and exe not in found:
            try:
                version = subprocess.check_output([exe, "--version"], stderr=subprocess.STDOUT).decode().strip()
                found[exe] = version
            except: pass

    if found:
        for path, ver in found.items():
            print(f"üìç {ver} ‚Üí {path}")
        if len(found) > 1:
            print(f"\n‚ö†Ô∏è ‡∏û‡∏ö Python ‡∏´‡∏•‡∏≤‡∏¢‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô ({len(found)} ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô)")
            print("üîß ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡∏Ñ‡∏ß‡∏£‡∏•‡∏ö Python ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏≠‡∏≠‡∏Å ‡πÇ‡∏î‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÑ‡∏ß‡πâ‡πÅ‡∏Ñ‡πà 1 ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
            print("üìå ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏ñ‡∏µ‡∏¢‡∏£ ‡πÅ‡∏•‡∏∞‡πÑ‡∏°‡πà‡∏™‡∏±‡∏ö‡∏™‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏£‡∏±‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á python")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Python")

def update_pip():
    print("\nüì¶ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï pip ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "--upgrade", "pip"])
        print("‚úÖ pip ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
    except:
        print("‚ùå ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï pip ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

def check_and_offer_python_update():
    print("\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô Python ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô...")
    current_version = sys.version.split()[0]
    print(f"üìå ‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ Python ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô: {current_version}")
    print("‚ÑπÔ∏è ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‡∏à‡∏≤‡∏Å https://www.python.org/downloads/windows/")

def check_tkinter():
    print("\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô tkinter ‡πÑ‡∏î‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà...")
    try:
        import tkinter
        print("‚úÖ ‡∏û‡∏ö tkinter ‡πÅ‡∏•‡πâ‡∏ß (‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô GUI)")
    except ImportError:
        print("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö tkinter (GUI) ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python ‡πÅ‡∏•‡∏∞‡πÄ‡∏•‡∏∑‡∏≠‡∏Å 'tcl/tk'")

def update_packages(packages: dict):
    print("\nüì¶ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô...")
    for module_name, pip_name in packages.items():
        if not pip_name:
            continue
        try:
            __import__(module_name)
            print(f"‚úÖ ‡∏°‡∏µ‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ‡πÅ‡∏•‡πâ‡∏ß: {pip_name}")
        except ImportError:
            print(f"‚ûï ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏•‡∏ö‡∏£‡∏≤‡∏£‡∏µ: {pip_name} ...")
            try:
                subprocess.check_call([sys.executable, "-m", "pip", "install", pip_name])
                print(f"‚úÖ ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {pip_name}")
            except Exception as e:
                print(f"‚ùå ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {pip_name} ({e})")

if __name__ == "__main__":
    check_python_versions()
    update_pip()
    check_and_offer_python_update()
    check_tkinter()
    update_packages(required_packages)
    print("\n‚úÖ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô! ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Python ‡πÉ‡∏´‡∏°‡πà")
    input("üîö ‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á...")
